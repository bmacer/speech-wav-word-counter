Hello again, as you know I'm Eli the computer guy over here for every man it and today's class is TCP, IP and subnet masking. So today we're going to be talking about the TCP IP protocol and then how you create subnet masks so so this is important in today's day and age, TCP IP is the main protocol that is left for networking. Back when I started a 10 or 11 years ago there were lots of protocols that people use. People use TCP IP, people used.
Ipxe, they use netbeui, they used a numerous protocols now just about everybody uses TCP IP. Now the class. Today we're going to be talking about something called TCP IP version four, so there are multiple versions of the TCP IP protocol you may have heard of something called TCP IP version six. Well, so that you understand TCP IP version six is much much.
Different then TCP IP version four as far as things like configuration goes, actually well. It's a lot different on a whole bunch of things, but as you should understand, if you know how to do see TCP IP version 4, you don't necessarily understand how do TCP IP version six. This is not a big deal. I know if you read the technology papers and the magazines and all of that, you will hear that TCP IP version six is the next great.
Thing and we all have to jump on the TCP IP version six bandwagon. And if we don't it's going to be computer Armageddon. Honestly, I have been hearing that since 1999 way back when I got my MCSE my Microsoft certified Systems Engineer way back then. In 1999 they were telling us how everybody was going to go to TCP IP version six like in the next couple of years and now it's 11 years later and everybody is still using TCP IP version four so.
If you learn TCP IP version four, you're good. We're going to be using this for a long, long time. At some point, TCP IP version six will replace version four, but I mean that could be 2020 or at the rate we're going 2030, so you'll be fine. We're going to be talking about TCP IP version 4 today. We're going to be talking about how it works, and again, we're going to be talking about how you do subnet masking.
So when we are talking about the TCP IP protocol, you have to understand a few things about how TCP IP works. This will just make things easier as you go on and network. And the first thing that you need to understand that the TCP IP protocol is actually what is called a protocol suite. The TCP IP protocol is actually made up of something called TCP Protocol and IP protocol. Actually with a few more protocols in there.
The TCP IP protocol.
Is multiple protocols all tide together into one thing that is called TCP IP? The main protocols in here though. And TCP IP RTCP which is transmission control protocol and IP which is Internet Protocol. Now these are the main protocols and they do two very important functions. The 1st.
Protocol that we should talk about is IP, So what IP is IP? Is the protocol within TCP IP that controls routing of information to different computers, different devices and different servers on the network. So you will have heard of IP addresses. The IP protocol deals with these things called IP addresses, subnet masks, default gateway, DNS, etc. The IP protocol.
Is what?
Allows two computers to figure out where the other one is so that they they can start communication. The big thing with IP that you will hear it is that IP is what is called a routable protocol. Therefore TCP IP is a routable protocol. Back in the day. Like I say, when there were more protocols out there that people were using, there were routable protocols and non routable protocols. So routable protocols were TCP IP, IP.
IPX SPX what this meant was that you could divide networks into multiple sub networks. So in non routable protocols every single computer can talk to each other. They're all connected. So if you plug it into a network for a non routable protocol all those computers are connected and this can cause absolute havoc with just bandwidth utilization. When all these different computers.
Try to talk to each other, because imagine if every single computer on the entire Internet was actually connected to every other single computer on the on the Internet at any one time, it would be complete havoc. Take my word for it if you don't understand why, what IP? Which is a routable protocol and IPCS did? Was they made it so that you could divide all these computers into multiple subnetworks and then you had a boundary?
Which was your router.
And then through that router. These computers could then try to connect to other networks if need be. So anything on this sub network would talk to each other. But if a computer here needed to talk to another subnetwork then it would go through a router. It will go through the Internet and such and go to the subnetwork. Basically routable protocols allow for you to divide huge networks into smaller sub networks. This is a big thing. Then being a routable protocol you connect.
All of those subnetworks using routers makes sense, so that's the big thing with the IP protocol. Now, of course, the IP protocol just so you know, since we're doing a class when we talk about the OS I model. So the OS I model is the model for how network communications happen. IP is on OS, I layer 3, the network layer just so you understand that. So once we've talked about IP so IP.
Is is about routing the information, so it's it's how computers discover each other, so so that they can start communicating well once the computers have found each other, then they do need to start communicating, and that is where TCP comes in. Transmission control protocol, so this deal with once the computers have found each other, how are they going to talk? So hello. Hi, OK, now that that's happened.
How are they going to talk? You know what language are they going to talk? How fast are they going to talk, etc. This is all done with a transmission control protocol now.
You can get into a 5 hour class just on on explaining all this basic stuff, but what you should understand about TCP, that becomes very, very important, especially as in network transmission technician is something called windowing.
Windowing is the process by which your client computer sends information to the server computer. So when two computers are trying to talk, windowing is the process of how that data is sent from the one computer to the other computer.
What happens in the windowing processes is you have one computer here and you have one computer here, right? Remember that when TCP IP was created, when the Internet was created, this was created for the military. This was created for World War three scenarios. Everybody thinks is a joke. Everybody kind of laughs at it, but no remember the Internet, TCP, IP. All of this was created. So what happens if nuclear Armageddon has happened and you have diverse military installations?
Trying to communicate with each other. I mean, that's a scenario that TCP IP was created under, so under that scenario the the government and the military realized that that lines of communication might be very very flaky. You may not be able to send a lot of data because if you sent a lot of data by the time it got to the other side wherever it's gained sent it maybe maybe garbled. So what they came up with was a concept called windowing. So what happens in windowing is this computer.
Computer one is trying to send information to computer 2 now in TCP IP all the data is broken down into something called packets. So if you're trying to send a Word document, if you're trying to send a movie, etc, all that gets divided down into these little little packets. Those packets then get sent to the computer that is receiving the data. Well, since the computers don't know what the quality of the transmission lines are.
The first computer doesn't want to just send the entire document all at once because it may may come out as garbage at the other side. So what it does is it starts sending packets in groups and those groups get progressively bigger. So what happens in the window and process is computer one will actually send one packet, one packet all the way over to computer two, and this packet will be labeled packet one.
Computer two will receive packet one. It will send an acknowledgement back to computer one saying hey I receive packet one, so that's only one packet and a packet is really small. It's like bits and bytes. It's nothing. But now that computer one understands that it can talk to computer two, it knows that it can try to send a little bit more information. So this time it will send packets. Since we already did one, it will now send packets to.
And three.
So it now sends two packets.
Over to computer to computer 2 receives those two packets and it says hi. The last packet. I received, an order was packet three, so it sends back an acknowledgement said I receive packet 3, then computer one goes. Hey this is even a better connection. So what I'm going to do is I was 123 so I'm going to send packets 456 and seven. So now it sends four packets. So this is.
Theory, but but let's say it doubles every time this goes to computer to computer. Two goes. Hey, I got all the information. The last the last packet I got was 70 and acknowledgment goes back to 7. So this is great. So basically, as long as this communication is solid, as long as this keeps happening, right? Computer 1 keeps sending out twice as much information. So the next time it will send out eight packets then will send out 16 packets, 32 packets, 64 packets.
And as long as it's receiving the acknowledgment on the last packet, and that it's in order, then it would just keep doubling and sending out larger and larger and larger chunks of this information. Now what happens?
Is, you know, let's say this gets up to 128 packets. You know the that sending out to computer 2. Now if something happens with the data on the way and the packets get messed up, what may happen is computer two will only receive let's say two packets out of that whole mess of 128 packets. So so computer once in 128 packets computer two only received two of those packets in order. So let's say at this point.
A pack of 1034 or 1033. What will happen is computer two will then say hey the last packet I received an order was packet 1034.
What computer one will now do is it will?
Start sending information again and it will close the window back to a single packet. So now we're all the way up to sending out 256 or 128 packets. Large chunks of data. Well, now since computer one knows there's a problem, it will now go back and it will send 1035. It will send a single packet.
To computer 2 and then computer two will say I receive 1035 and then computer one will then send two packets and then computer two will say I receive those two packets. Four packets I received that too and this keeps happening in there till there's a problem in the data communication and then it goes back to sending one packet and then two packets and four packets and eight packets and then back to one packet. So basically every time there's a problem with the transmission you go back computer, one goes back to sending one packet and then.
It starts expanding the window, and then if there's a problem, it brings a window back down again, starts expanding the window, brings it back down again. Now if you were like me and you were using back the Internet back when we had 56 K modems and 28 K modems, and all that you used to see this windowing a lot, so you know if you're if you're 30 years old or older, you have probably seen this happen. So back when you used to download information from websites, you would have a little progress bar, and on that progress bar.
You would see where it would incrementally download like will be like. It'll download, download, download, download, download, download, download it, and so it would like stutter. So it would be like small increments and huge increment small increments and huge immigrant. The reason you saw that was because of the windowing that was happening during that communication process. Why when doing is huge right now in today's day and age because you're like Eli modems. I know some of you probably have never used modems, so you're like.
Eli, I don't care about it. 56 K modems. Why do I care about that? Why this is important in today's day and age is because of real time communications because TCP IP version four can be a real mess for real time communications because that whole window end process when you're sending pictures, you probably don't notice it. If you have a broadband connection, you know if you have a three megabit per second connection, you know you just see you just see videos.
Load, you just see pictures download even if there are little quirks or little stops in it. It's still so fast you do not see it. Real time communication has to happen in real time, but the problem is is if there are any problems or hiccups on the network.
With this windowing process, you can have the sending computer go down to sending you know 348 packets at a time. 8 packets is not enough to keep a real time communication stream going. Again, this gets a little complicated for this class. The more you you play with networking and such, the more you will understand this. The main thing to understand with the Transmission control protocol is that this is what actually controls the communication, so IP connects.
Two computers together, TCP is what then deals with the communication between the computers. Once they've started talking to each other. The biggest concept of TCP you have to understand though, is this thing called windowing. This is how data is transferred from the first computer to the second computer. What you have to understand is basically it starts out with one packet, it doubles it, doubles it doubles, it doubles until there's a problem, then it goes back to 1 double, double, double, double until there's one double double double until one see how it goes. Hope you know how it goes, but.
Those are the things that you have to understand when you're dealing with the TCP IP protocol suite. Remember, it's an entire suite, and of course just so I do my due diligence. TCP is OS I.
Layer.
Four so this is called the transport layer Transmission control protocol. Transport layer all makes kind of sense.
So let's talk about the components of a TCP IP network. So so you understand you know what you're looking at when you, when you're when you're looking at a TCP IP device. The first thing is what is called the IP address.
So the IP address is something that you'll see and you'll see it's like 10.1 dot 10.1. Let's say that is an IP address. IP addresses are addresses that are used to signify every computer or device on a network. Every computer or device on a TCP IP version. Four network needs an IP address 10.1 dot 10 dot one, 192.168 dot 1.1, etc. 207.65 dot 40.
Forward out one. These are all IP addresses, so every device on the network needs what is called an IP address. So then after you have the IP address you have something called the subnet mask.
Now in the next section, we're going to talk a lot more about the subnet mask, so we're just gonna go and just kind of glaze over right here.
The subnet mask is basically a way to segment a network of logically so that different computers and different devices cannot necessarily talk to other computers and devices on the same physical network. So so basically, if you have a large network, let's say you have a, I don't know 200 computers on a network you don't necessarily want all those computers to be able to talk to each other, even though they're physically connected to the same network.
You can prevent them from talking to each other by putting in this thing called a subnet mask and the subnet mask. Again, like I said, we're going to talk about it in in the next section a little bit. Now the next thing after deal with the subnet mask is something called the default gateway.
The default gateway is the router for the sub network that you are on. So basically what the default gateway allows is your computer is going to look on the local network for the computer or device that it's looking for. Let's say it's looking for a website or it's looking for a server. It's going to look at the local network first. If it can't find that computer or device on a local network.
Will then go to the default gateway and it will ask the default gateway to find that computer or device on whatever else is on the other side. So basically what happens is you know you have your office here and you have the Internet out here.
You have your computer and you have your router. So what happens is your computer with its IP address is looking for a website. Now that may seem a little funny, but basically it's looking for a website and what it will do is it will first look for at all the computers in the internal network looking for the website. So if you're trying to go to www.cnn.com, that computer is actually going to look inside your little subnetwork to see if cnn.com is there. If it's not there, it will then use. This default gateway will then go to the router.
And say hey, I need to find cnn.com. That router will then go out to the Internet and through the whole bunch of magic of the Internet. It will then find cnn.com and it will create a link between cnn.com and your computer. So the default gateway is the router. If you're dealing with small networks, this will be the router. This will be the DSL modem. This will be the cable modem. This will be ADTRAN, etc. Basically, the default gateway is what connects your sub network to all the other networks that are out there.
So.
You understand what the default gateway is. Now. The next big thing to understand is we were just talking.
About www.cnn
dot com. Now, if you've been paying attention to what I've been saying, the Internet Protocol, the IP protocol connects computers based upon their IP address, so 10.1 DOT 10.1, let's say.
Now this is not this, so you may be wondering. Well if all the IP protocol cares is about these IP addresses, well, where do these domain names come from? Www.cnn.com server? If you have computer names, you know pc1etcwellcnn.com actually doesn't mean anything to your computer, so your computer that you're sitting in front of when you put in www.cnn.com your computer.
Actually does not care about that for TCP IP communication. What it cares about is the IP address. So what happens is you have your computer, so you have your computer.
And your computer only cares about an IP address, but you want to plug in somethinglikecnn.com. This is where something called a DNS server comes into play. This is called a domain name server. What domain name servers do? Is they map domain names to IP addresses, so within this domain name server it will say www.cnn.com equals I don't know.
201.65 dot 33.2. So what's going to happen is you plug into your computer into your web browser www.cnn.com your computer doesn't care about this name. Can't really do much with it, but what it can do is it can take cnn.com. It goes and it talks to the DNS server. And it says, hey, this guy just plugged in www.cnn.com. What does that mean? The DNS server?
Then tells your computer that cnn.com is the IP address 201.65 DOT 33.2. Your computer then goes. Oh thank you. I now know what to do with that, so it then uses this 201 sixty five DOT 33.2 IP address. It then looks at the internal network for the IP address. If it can't find it in the internal network, it then goes to your router to your default gateway.
And your default gateway then goes out to the Internet and then connects your computer. So the important thing to understand here is when you put in cnn.com, facebook.com, yahoo.com etc etc etc. Your computer really doesn't care about that. That is for you, your computer would prefer you plug in IP addresses all the time. It would make life a lot easier for your computer. Thankfully, the world doesn't run by computers. So what happens for your computer? 'cause your computer only cares about IP addresses?
What happens is when you plug in what is? This is called a domain name. When you put that into your computer, your computer then goes out. It talks to the DNS server, the DNS server then tells your computer what the IP addresses of this domain name. Once your computer has the IP address of the domain name, then it can go out and it can try to find the website that you were looking for. This is a simplistic thing. Once we get into website administration and all that, this gets a little more complicated, but but but.
This is the basic idea. Your computer does not care about domain names, it resolves domain names through DNS or domain name server to get the IP address of the computer with this domain name and then once it has the IP address it then goes out to communicate with that computer. Now the final component.
That you need to understand about four for TCP IP networks is something called DHCP.
I think it's dynamic host control protocol. Now what is this? Well, as I've said, every device on the network needs an IP address. If it does not have an IP address, it can't do anything. Not only can it not receive communications, but it also cannot talk to everybody. So every computer on the network needs to know its IP address and needs to know its subnet mask. It needs to know its default gateway and it needs to know what DNS servers to talk to. So there are two ways you can give this information.
To the computer, the first is by giving your computer what is called a static.
IP address what this means is you sit down at your computer at or the device and you plug in all the information manually. So you say, this computer has an address of 192.168. Dot 1.55 has subnet mask 255.255 dot 255.0 as a default gateway on 192.168 dot 1.1 and the DNS servers are 192.168 dot 1.1.
And two oh 855.44 dot one. Now as you can see me simply writing this out on a whiteboard and that took a couple seconds. You were probably getting a little bored while I was doing it, so this can be a real pain in the **** if you have to sit down at every single device on a network and plug in an IP address, this can be a real problem. Not only that, but since all computers on a TCP IP version four network are signified.
Or communicated with with their IP address. If you accidentally give two devices or two computers the exact same IP address, it can just cause all kinds of havoc, so some packets go to that computer. Some packets go to that computer. I'm not saying some documents go to one computer and some documents go to the other computer. Like I said, when computers are communicating using the TCP IP protocol, things like documents, things like videos, things like pictures get divided.
In two packets, you know it might take a million packets to put one picture back together. So if if you know 500,000 packets go to one computer and 500,000 packets go to the other computer, there's nothing there to rebuild, so this is very important to understand, so if you have two computers on the same network with the same IP address.
That's just bad. It's just not gonna gonna work out very well. So what you can do is you can give the computers or devices on your network what are called dynamic IP addresses, and this is where DHCP comes in, so dynamic.
IP addresses mean that when the computer connects to the network, it will call out to the DHCP server. The DHCP server will then give it an IP address. It will tell it the subnet mask. It will tell it the default gateway and it will tell it the DNS servers all automatically and it will keep a record of the IP addresses that it has given out. To make sure that it doesn't give out the same IP address.
To multiple computers, this is a huge thing. So basically DHCP allows for the automatic distribution of IP addresses in the information. Like I say with subnet masks, default gateways, DNS, etc. This is a very good thing. Again, you may not realize it on a 5 or 10 computer network, but once you start dealing with hundreds or thousands of computers this is DHCP is a lifesaver. Now what happens in the DHCP process is that.
Your computer, so we put your computer here again calls out to the DHCP server and it says hey I need an IP address so you have configured in the DHCP server what the scope of IP addresses the DHCP server can give out, so you will tell the DHCP server you can give our IP address is 192.168 dot 1.100 through.
254 So this gives it a scope of 154 IP addresses that this DHCP server can give out. So this DHCP server will not give out 192.168 dot 1.99 because that is not within its scope. It will give out DOT 1.15 dot 10.205 etc so the scope is the full range of IP addresses you allow the DHCP server to give out. You will then tell it what the subnet mask is. Again, we're going to go into this in a few minutes.
And you would say 255.255 dot 255.0 at Class C subnet mask. You would tell it what default gateway you wanted to give computers. You know, so 192.168 dot 1.1. This is the router, so how they're going to communicate with the outside world and then what? DNS servers that you want to tell the computers about? Again, whatever that is, so your computer talks to the DHCP server and gets all this information you have configured. Or somebody has configured all this information in the DHCP server.
At some point in the past now.
The DHCP server will then give all this information to your computer with something called a lease time.
So what the lease time means is this is literally a lease on how long your computer is a loud to own that IP address. So your employer asks for an IP address, that IP address and all that information is given to your computer with a lease time. This least time, maybe a day. This may be seven days. It may be a month. It's all up to you as a System Administrator, you this again is something that you can figure into DHCP well.
DHCP server gives your computer all the information with is lease, so let's say it's four days. What happens is halfway through the lease, your computer tries to automatically renew the IP address, so you know you get this lease for four days. At the two day mark, your computer will automatically re contact that DHCP server and say hey I am still here. I'd like to keep the IP address. Do you mind? DHCP Server says no, no problem at all. You keep the IP address.
So and then the lease is renewed for another four days and the computer keeps the IP address for four days, again at the 50% mark.
The computer then recalled contacts a DHCP server again says, hey, I still like this IP address. Am I allowed to keep it? DHCP Server says yes or no. Well, what happens is?
If your computer cannot contact the DHCP server at the 50% mark, then it waits until the next 50% mark, so you have a lease for four days. So at two days your computer tries to automatically contact the DHCP server and say, hey, can I keep this IP address if for some reason DHCP server is offline or cannot be communicated with, then your computer keeps the current IP address that it has and then it waits.
Till the next 50% mark. So you started four days. At two days you asked for a new IP address you didn't hear back. So at one day you asked for a new IP address.
If you still don't hear back, you wait another 50% of the time. So this is down to 12 hours.
So the 12 hour mark you try to contact the DHCP server if it doesn't communicate back then at 6 hours you try to talk, then at three hours so every 50% it tries to recontact that DHCP server. Finally, when it gets all the way to the end it really kind of depends upon the networking software that you have installed on your computer. Sometimes it will flush out the.
Other times it will keep it so the big thing to understand is that for DHCP this is all. This is all dynamic. As soon as you plug your computer into the network it will try to communicate with the DHCP server to get the IP address, subnet mask, the default gateway, DNS, etc. DHCP server as long as it's there will give that information a long with a lease. Again, the lease is something you configure. It can be one day, it can be seven days, it can be a year, it's all whatever you plug into the server. The big thing to understand is that the 50% mark.
The 50% from when the lease is going to expire your computer is going to try to contact the DHCP server to ask if it can keep the IP address. So if this is a if the lease is a year that the six month mark, it will try to communicate. If it's two days then at the one day market will try to communicate. If it can't communicate then it will wait another 50% of the time. So then you know like I say, if it's four days then I'll go to two days. They don't go to one day, then I'll go to 12 hours then go to three hours then it goes to 1 1/2 hours.
And it goes to 45 minutes and then the math. You know, 22 minutes and 30 seconds, so it keeps it keeps dividing in half. This is something important to understand with DHCP servers. Now most DHCP servers they normally give out a lease of about seven days and this is a good default. What you have to understand is once you get into more complicated networking is the shorter your DHCP lease.
The more network traffic you have just for stupid things like DHCP, but it means that less IP addresses are being used by computers that may not be on the network, whereas the longer the IP address, the more IP addresses get used up, but the less traffic on the network. That's kind of something that you'll you'll have to deal with. Some other point we'll talk about that later. Now the final thing that you should understand so we've talked about the HCP we talked about DNS. We've talked about default gateways and all that.
The last thing that you should understand is something called network address translation. It's called Nat. You will hear about Nat a lot, so so back in the days you know 15 years ago everybody was worried because they thought that every single computer device on the Internet was going to require its own dedicated IP address. So that means your computer would require an IP address that was unique to the world, not unique to your office, unique to the world.
Your printer, your network printer would need an IP address that was unique to the world, etc, because they thought every single device that would that was connected to the Internet would need its own unique IP address. Well then they came up with something called Nat or Network address translation and this this fixed a whole bunch of stuff. So you will see this is our router.
That most internal networks have IP address ranges in the 192.168 dot 1.12 dot 254, so if you go to your little network inside your house, your computer inside your house may have an IP address of 192.168 dot 1.2. You can go to your friends house and one of the computers inside his.
House also has an IP address, 192.168 dot 1.2 etc etc etc. How this happens or how this is able to work is through network address translation. What happens is every router that connects to the Internet. So whether this is a home router, whether this is a business router, whether this is an enterprise, whether you're dealing with IBM, every single router that connects to the Internet needs its own dedicated IP address.
So, so this building that every man it is housed in, we have an IP address. Our computers or servers that are sitting on the Internet. They have individual IP addresses. My home router has an individual IP address, but then once you get inside the router you can use or you can reuse IP addresses. So like I say, all internal networks either use 192.168 dot one dot whatever or they use 10.1 dot 10 dot whatever network addresses.
All the internal networks because what happens?
Is let's say you have a computer. Here is 192.168 dot 1.2 and you have 192.168 dot 1.3 here, so this is your network. Then your neighbor has 192.168 dot two also and 192.168 dot three also. Well, when you are trying to communicate 2 servers on the Internet, the server that is on the Internet is going to be most worried.
About what your external IP addresses so your external IP address will be, say 208.55 DOT 44.1. So what network address translation allows is computer here. This 192.168 dot 1.2 is going to go to your default gateway and it's going to go out and it's going to find cnn.com. Cnn.com is then going to say this communication came from this.
Particular router it will send the information back to this router. This router has Nat built into it. Network address translation built into it and it says I know that internally the computer that was asking for this information is 192.168 dot two and so it will then route the information to 192.168 dot two. Now if this computer down here wants to go to letssayfacebook.com.
The external IP address for this router maybe 209 dot 7766.44, so 192.168 dot three is going to go to the default gateway to the router. That's going to go to the Internet. That's going to go to Facebook. Facebook is going to go. Oh, I see the person requesting this information. Is this external IP address. So Facebook will send the data back to this external IP address. Nat network address translation.
Is built into this router. This router goes. Oh, I see that 192.168 dot 1.3 is the one that asks for this information and then the information will get routed here.
Again, this is a whole mess. Nat is not a hugely complicated subject, you know, maybe you should go on Google or Wikipedia. If it's a little confusing. The main thing that you have to understand that Nat does network address translation is it makes it so every single device that can talk on the Internet does not need its own absolute unique IP address in the entire world. If Nat did not did not exist, then literally.
Every single device that connected to the Internet would need its own IP address and simply there there are not enough IP addresses out there. So with this we've talked about the IP address every single computer or device on a TCP IP version. Four network needs an IP address both to send and receive information. We talked about the subnet mask. This is how you you subnet. We'll talk about that more in a second. We talked about default gateways. Default gateways are routers. Routers are what connects.
Different subnetworks, so whether you have multiple subnetworks in one building or whether you are trying to connect your little office network off to the Internet, the default gateway or router is what separates those two networks. We talk about DNS. Remember domainnamescnn.com, facebook.com, yahoo.com, etc don't mean anything to your computer. Your computer will go out and talk to a DNS server, and it will say, hey, my user gave me this name. What do I do with it? That DNS server?
We will then say IP address for that domain name is. Is this to wait 7766.4 that gets given back to your computer? Your computer then tries to communicate with the website or the computer based upon that IP address. We then talked about DHCP dynamic host control protocol. Again, you can plug in what are called static IP addresses into every single computer and device on your network. This means you sit down at every single computer and you actually type in what IP address?
What subnet mask with default gateway with DNS server etc. Or you can set up DHCP. DHCP will automatically give all this information to any client that connects to the network. Now when it does remember that it gives all that information and it also gives a lease time at least time is something that you can configure on the DHCP server. Could be a day, could be a year. It's all up to you. The average is like seven days at once. That lease is 50% expired.
The client will try to re contact the DHCP server to renew the lease if for some reason the client cannot contact the DHCP server it will wait till the next 50% mark to the next 50% marked in the next 50% mark etc and then finally and this whole mess that we talk about Nat network address translation. Basically this is what keeps you from having every single device on the Internet needing its own IP address. That was a big mouthful. If you thought that was confusing, we're about to go into.
Subnet masking, so you might want to pause here and I get a little cup of coffee.
OK, so we're starting on the long uphill slog to subnet masking now. The first thing before we go into subnet masking is you need to understand, uh, where we come up with these numbers when we say 10.1 dot 10.1. Where does that come from when we say 255.255 dot 255.0? What does that mean? Well, basically what those addresses signify is there are a number of values for what are called octets. So when you're dealing with TCP IP addresses.
You're dealing with four octets, so octets are series of eight numbers. So basically you have 12345678.12345678 dot 12345678.12345678. So when I say, let's say 10.1 dot 10.1, the computer is actually looking at this big thing, which is series of four octets.
To come up with this number.
So 10 would be here. .1 would be here. .10 will be here. .1 would be here now when we're looking at this octet and where we come up with these numbers. So we'll look at a single octet. So 12345678. So this is 8. These are 8 bits. So with this they can either be one or zero zero or one so you can have 111001.
Can be one or zero, so on or off you can't have two.
2 doesn't work, it's either one or it's 0.
Now how we get to the numbers then is starting on the right hand side. We give each one of these spaces a number value. So here this number value is 1, the second one is 2 and it keeps doubling so 124.
8.
16
30 two 64128 So these are the number values for these octets, so this is 1248 sixteen thirty two 64128 then if you go to the next octet, you start over again. SO1246 or 8 etc. So each octet is entirely separate. So if you are trying to get.
Let's say an IP address of 128, so 128. What you would do is you would put a one over the 1:28 and then a zero over everything else. So this means count 128. So if I want you know 192.168 dot 1.128.
You just put one bit as true over 128.
If.
Let's say you're trying to get 192.168 dot 1.10, right? Well then we look here and we say, OK, well, we've got an 8, so will make eight true. And then we've got a two. Will make two true and then everything else is 0. So if you want 192.168 dot 1.10, that means two has a one over it and eight has a one over it because that kind of make a little sense.
So you know if a.
If you want a let's say I don't know address 254. So if you Add all these up together they will come out to be 255, so 255 if you add up all these together. So let's say you want an IP address of 254, so you'd say 11111110. So 128 + 64 + 32 + 16 + 8 + 4 + 2.
That's it, and then you Add all that up and that will come out to 254. So this is what the numbers mean. This is how we get the numbers. This is going to be very, very important in a second. Once we steal, start dealing with with with subnet masking. So basically when you're dealing with an IP address or when you are dealing with a subnet mask you are dealing with four separate octets. These octets are made up of eight bits. The bits are either on.
Or they're off so one or zero. The way you come up with a number is again from right to left. You start with one, then you double to two to four to 8 to 16, to 32, to 64 to 128. So all this will make a little bit more sense once we get into the subnet mask in a second, but this is the basic idea behind numbering and octets.
So now that you understand how the numbering system works, we need to talk about subnet masking. So what you may not realize is when you're dealing with an IP address, let's say 192.168 dot 1.1, this IP address actually tells you two things, or there's two things in here. One is the address of the computer or the networking device on the network. So you whether it's a computer, whether it's a server, or whether it's a printer or whatever, the TCP IP address device on the network is.
That that is here. But there is also this subnet number or the network number, so the IP address tells you the identifier for the network and it tells you the identifier for the computer or networking device. Now you know you're looking at this number and you're probably wondering you know what part of this is for the network and what part of this is for the computer. Well, that is what the subnet mask.
Tells you so you will see something like 255.255 dot 255.0. This subnet mask tells you what part of this IP address is the network identifier and what part of this IP address is the device identifier. Now this is very very important because devices on different networks cannot talk to each other. So if you have one computer plugged into a switch.
On Network one and you have a printer plugged into the exact same switch, so they're physically on the switch, so you have a switch here one goes to a computer one. Let's say it goes to a printer, right? The computer that is on the 1st subnet cannot talk to the printer if it's on another subnet or another network based upon the IP address, unless of course there is a router to connect them. So remember, routers.
Connect different subnets so if you have a computer on one network and a printer on a different network, they need a router to communicate. Even if they were plugged in a physically to the same switch, so this is very important understand so you can have multiple subnets, multiple networks, all plugged into the same physical switch, and this is not vilans. This isn't like Cisco Vlans or like routing or switching Vlans. This is simply how TCP works.
So if you have computers on different subnets on different networks, even though they're connected to a switch, so they're physically connected together, they still cannot talk to each other, so this is very important to understand, so the subnet mask is what tells you.
What part of the IP address is for the network and what part of the IP address is for the device on the network? So this here is what it's called. A Class C subnet. Since I know what's going on, I can automatically look at this Class C subnet and know that the network portion of this address is 192.168 dot one. So this is a 192.168 dot one dot X network and I can tell that the identifier for the device.
On the network is the one. Now I can do that because I understand what subnet masking is. So so now that we under understand how that all that all that works. Now how you figure out a subnet is basically you decide. So we talked about the numbering system before, so we have four octets of bits. A bit can either be a one or zero, remember, and depending on how the ones and zeros are up here you get.
A different number, so like this one right here. In order to get 192.168 dot 1.1. That means we have 00000001 and that makes one. If we wanted a let's say three, it would be 1100000. So remember how we talked about the numbering system before? So what we do is using these octets.
We decide.
How many networks we need in our network and our overall network and how many hosts we need in our overall network and then all we do is we use that many bits.
That we need to accomplish our task. So we just divide it off anywhere in here so we can say right here we want everything to this side to be the network number and everything to this side to be the device number.
Or we can come here and we can put it here, it or here or here. It doesn't matter. We can decide depending upon the subnet mask. So when you're when you're trying to figure this out, the thing to think about is that it depends on how many networks you're trying to create or how many devices you're trying to shove into a single network. So depending on how many bits you use for your network, there is an equation and four for the networks.
It is 2 N, so the total number of subnets you can have is 2 to the power of however many bits you have used for the subnet. So let's say you want to use the 1st 8 bits out of the four octets for a subnet, so it would be 2.
To the 8th and that will tell you how many subnets you can have on this network.
Now.
If we're trying to find hosts so this way is for networks, this way is for hosts you have two to the n -- 2, so let's say we wanted 254 hosts. That's a standard that is using 8 bits from this first octet, so this is a Class C subnet, so it would be 2 to the 8th minus 2.
And I just know this by heart, which comes out to 254 hosts. So what you're doing when you're creating the subnet is you have to figure out either how many networks you want or how many hosts you want, and then depending you basically count one way or the other. If you need lots of networks, then you count out how many bits you need from left to right and then.
You just take those bits for your subnet network and to figure out how many subnets you can have. Here it is 2 to the N 2 to however two to the exponent of however many bits you have taken. If you're trying to figure out how many hosts you need, you go right to left and then you just take the bits as you need and so 1234567 and you keep going. Eight, 910, eleven, 12:30, forty 5067. However many you need. So if you if you need.
Oh, let's say 508 hosts on Earth. That would be more than that, but basically you you just go across and that way it is 2/2 D in. So the end is how many bits you use. One or two or 3 -- 2 equals tells you how many hosts, so that's a that's all you have to do to figure out the subnet. You know how many subnets or devices you need. Now when you're dealing with this.
All you do then to figure out the subnet mask.
Is again 12345678.12345678 dot 12345678.12345678, so these are the four octets to figure out the subnet mask you again you just add up all of the debits and then the number. So remember when we're dealing with an octet 12345678. Remember the number positions? This is 1.
This is 2. This is for this is 8. This is 16. This is 32. This is 64 and this is 128 right? So if we're trying to figure out a subnet and let's say we decide to use all of the first octet for for the network for the subnet networks. So if we add up 1:00 and 1:00 and 1:00 and 1:00 and 1:00 and 1:00 and 1:00 and 1:00 if we add up all these, right?
Then that comes to 2:55 and then we do dot, 'cause that's the octet. And then there's nothing here, nothing here and nothing here. So that would be 255.0 dot 0.0. So the subnet mask if you were doing this will be 255.0 dot 0.0 now.
Let's say we wanted to do 11111111, so we want to use all of that, right?
So then that would be 255.255 dot 0.0 and if we wanted to use all of that one then it would be 255255.255 dot zero. So now you may have seen these particular subnets before 255 dot 0.0 dot 0255.255 dot 0.0 dot zero and 255.255 dot 255.0.
These are the classic AB&C subnets, so and a class subnet is 255.0 dot 0.0 AB. Class subnet is 255.255 dot 0.0. A Class C subnet is 255.255 dot 255.0, so if you ever hear about this, you know when you have normal networking people.
All talking back and forth, and they say it's a Class C subnet. What they mean is that the subnet mask is 255.255 dot 255.0. If they say it's a Class A subnet, it's 255.0 dot 0.0. So you follow me there now. OK, so you've seen these standard ones 255.0 dot 0.0255255255 dot zero. Well, sometimes since you are going to be a really cool network engineer, you are not going to divide your subnets.
On the octet right? So one octet. Two octets, three octets, four octets. Sometimes you're just gonna have to be crafty, clever, cool, and not use the 255 subnets. So let's say you were given a whole Class C subnet, so you are in an office and you know your higher level network person gave you 254 hosts, so they gave you a Class C subnet.
192
let's say .168 dot one dot dot X and it's 255.255 dot 255.0, so you're allowed to use this, but you want to divide this into two networks, right? Well, so we're using all the ones here. All the bets here, although here. So let's say we just want to create an extra couple networks, so we're going to steal a couple of bits out of this Class C subnet. So with this.
All you do.
Is of course, because we use all the numbers here, that's 255.
Period we use all the numbers here. 255 period we use all the numbers here 255 period. But here we only want to use 2 bits, so then we do one here and one here, right? Because that's where the division for the subnet will be. We add that up and then then this subnet mask 255.255 dot 255.192.
So now we can use these two bits to create different networks so.
That's how that works. Subnet masking.
It's pretty confusing, you know. You gotta gotta gotta scratch your head over it and you don't have to do subnet masking very often. Normally you simply use the subnet mask that, frankly, somebody else gave you. You know whether it's your your ISP provider, whether it's a senior level engineer, etc. You very, very very, very rarely have to create your own subnet mask. You know, dividing it off here? I've probably done it 10 times in the real world in my entire life.
You just use the subnets that they already gave you. The important thing to realize though is.
How to count how many different devices you can have on any particular subnet? Because this will be important, especially in larger environments, because like I say, if you have a Class C subnet, so classy is 255.255 dot 255.0. That means you're using 8 bits.
For the device identifier, which means you have two to the 8th minus two, which comes out to. You can only have 254 devices on this network. You try to plug in 300 devices, especially if you have something like a DHCP server. It's all going to get nasty really really really quick, so this is an overview of subnet masking. Again, like I say.
It's very very confusing. Very very tedious. The main thing that you have to understand is when you're doing the subnet mask. Whatever bits you use are used for the network, the subnet identifier, the other bits.
Are used for the computer identifier. Why this is important in this is the huge huge huge thing. So if there's one thing you take away from this, please take please take this is if you have a switch here you have a computer here and a computer here and this is on network one and this computer is on network two. They cannot talk to each other based on the TCP IP protocol. You have to put something called a router in between these two computers.
To get them to talk to each other. So that's the most important thing to take out of this is if you have computers on two different TCP IP subnets. They can't talk to each other even if they're connected to a physical switch, unless you put a router in there and you do some configurations. So if you understand that at least is an introduction to subnet in, and I don't know what just five or six times in a row, and hopefully you'll get everything.
So that's a class on TCP IP and subnet masking. A big thing to understand with this if this. If this is the first time you've ever heard of this is.
And this is a confusing subject. It's one of those things. Just the more you work with TCP IP, the more you work with networking, the more this makes sense. You know I showed you how to do subnet masking. The reality is you don't have to do subnet masking very often. You don't have to sit down and manually create subnet masks, you need to know it in case you do ever have to do it, but this is not some daily tasks that you're going to be doing. I mean like with me I come up with specialized subnets.
I don't know a couple of times a year you just have to understand how to do it. That's that's really the big thing. You know we we talked about the TCP IP protocol that this is the TCP IP protocol suite. Again, think of this more as an exam question. You know you should know that it's a protocol suite, but it's not that important at the end of the day it is made up of the TCP and IP protocols. Again, IP is for the actual how computers.
Find each other. You know we have the IP addresses and then TCP is how the computers talk to each other. Once they have found each other. The big thing with TCP is that you understand that whole concept of windowing, where the computer that is sending information will start sending larger and larger amounts of packets based on the quality of the communication lines between the two computers. As soon as it finds that there's a problem, it will then reset back to whatever the smallest number of packets is.
And then start enlarging again. Again, you will not notice this. For for downloading videos or downloading pictures or looking at websites you will notice this when you're dealing with voice over IP communication. Any type of real time communication. This windowing can cause havoc with and we talked about all the components of the TCP IP network. So you have your IP address, you have your subnet mask which divides the computers in two different subnets on the same physical network. We talked about DNS.
And default gateways. Default gateways are basically the router that connects your little subnet to other subnets. DNS is what turns domain names into IP addresses. Remember, your computer does not care about the domain name, it cares about the IP address. We talked about DHCP dynamic host control protocol. This is where you can always server on the network, give all the computers on the network, automatic IP addresses, it does it by giving the information and then it also gives a lease.
To the IP address to the computer receiving it that lease again. Maybe one day, year, whatever you decide at the 50% mark when that lease has 50% expired, the computer will try to renew the lease. If it can't renew the lease, it'll it'll go from 50% of that Mark. 50% of that market, 50% of that market, etc. We talked about Nat network address translation again, just a bit of a confusing subject. Sit down and read about a little bit. It's not that big a deal. Basically what Nat allows is it allows.
IP addresses to be reused by internal networks. So like I say, my building every man it.com in the side we can have IP address is 192.168 dot 1.3 and 192.168 dot 1.4 etc. And you can use those exact same IP addresses if Nat network address translation did not exist, that would not be possible. Every single computer or device that connected to the Internet would need its own unique IP addresses. We talked about what the numbers mean. We talked about those octets.
Again, when you're talking about numbers, so 10.1 dot 10.1, that is 4 octets. Octets are combinations of eight bits. They can either be one, or they can be zero. You know I showed you that whole whole mess. We talked about subnet mask and we talked about what used to be called classful networks ABCD and E.
I really haven't been used since, like 1992 or something. They were replaced. That whole concept was replaced by cider, classless Internet domain routing again at this level, don't worry about it, that's a Cisco. You know when you're going off your CCNA, you start worrying about it. Then I just want you to have heard about this since you're dealing with TCP IP classful Networks Insider, you should at least know those concepts exist. I show you how to do the subnetting, how to find how many hosts would be on a subnet and how many subnets would be.
Yeah, on a subnet you know that's all just basic math, so this class TCP IP and subnet masking. Like I say this isn't a hard subject, it's just something that you're just going to have to get used to. The more you deal with that TCP IP, the more you deal with routers, the more you deal with computers, the more this will all make sense. Again, if this is your very first class, probably seems really confusing as hell, but just do some Google searches and you know practice with your networking equipment and you should figure it out pretty quick. So as always I mean like the computer guy.
Over here for every man it this was TCP IP and subnet mask and I look forward to seeing you at the next class.
